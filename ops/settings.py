"""
Django settings for ops project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import configparser

# 不同版本python使用不同的sql操作组件
try:
    import pymysql

    pymysql.install_as_MySQLdb()
except ImportError:
    pass

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
config = configparser.ConfigParser()
config.read(os.path.join(BASE_DIR, 'ops.conf'))

# mail configs

# log configs
# todo: configparser 用法
##以列表形式返回所有的section
#sections = conf.sections()
#print 'sections:', sections         #sections: ['sec_b', 'sec_a']
##得到指定section的所有option
#options = conf.options("sec_a")
#print 'options:', options           #options: ['a_key1', 'a_key2']
##得到指定section的所有键值对
#kvs = conf.items("sec_a")
#print 'sec_a:', kvs                 #sec_a: [('a_key1', '20'), ('a_key2', '10')]

LOG_LEVEL = config.get('base', 'log')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '9n!))c(yl^rm7)-pg=&lxn^52igj!*8v6&=i-x1aumgf927r*w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# 未登录用户跳转登录⁬地址
LOGIN_URL = '/login/'

ALLOWED_HOSTS = ['*']

# 扩展用户模型
AUTH_USER_MODEL = 'users.User'

# Application definition

INSTALLED_APPS = [
    'bootstrap3',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ops',
    'users',
    'tasks',
    'mysql',
    'library',
    'DjangoUeditor',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ops.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'DIRS': [],
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 注册自定义模板
                'ops.context_processors.custom_proc',
            ],
        },
    },
]

WSGI_APPLICATION = 'ops.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

# 设置数据库
DATABASES = {}
if config.get('db', 'engine') == 'mysql':
    # db_host = config.get('db', 'host')
    # db_port = config.get('db', 'port')
    # db_user = config.get('db', 'user')
    # db_pass = config.get('db', 'password')
    db_database = config.get('db', 'database')
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'ops',
            'USER': 'root',
            'PASSWORD': 'devops',
            'HOST': '127.0.0.1',
            'PORT': '3306',
            # 'OPTIONS': {
            #     'init_command': 'SET default_storage_engine=INNODB',
            #     "init_command": "SET foreign_key_checks = 0;",
            # },
        }
    }
elif config.get('db', 'engine') == 'sqlite':
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': config.get('db', 'database'),
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

# 设置静态文件路径
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
    # other dirs
    # '/mnt/python_projects/django_demo',
]

# 设置session过期时间 20 minutes
SESSION_COOKIE_AGE = 1200

# 修改默认加密方式为md5,默认使用第一条加密方式
# PASSWORD_HASHERS = (
#     'django.contrib.auth.hashers.MD5PasswordHasher',
#     'django.contrib.auth.hashers.PBKDF2PasswordHasher',
#     'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
#     'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
#     'django.contrib.auth.hashers.BCryptPasswordHasher',
#     'django.contrib.auth.hashers.SHA1PasswordHasher',
#     'django.contrib.auth.hashers.CryptPasswordHasher',
# )
MEDIA_ROOT = os.path.join(BASE_DIR, 'upload/')
MEDIA_URL = '/upload/'
